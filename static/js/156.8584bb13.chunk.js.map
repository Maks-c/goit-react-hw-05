{"version":3,"file":"static/js/156.8584bb13.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBarStyle.jsx","components/SearchBar/SearchBar.jsx","components/MoviesPage/FoundMoviesStyle.jsx","components/MoviesPage/FoundMovies.jsx","pages/MoviesPage.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const SearchForm=styled.form`\n  //margin-top: 25px;\n  //margin-bottom: 25px;\n\n  margin: 25px auto 25px auto;\n  width: fit-content;\n`\n\n\nexport const InputForm=styled.input`\nmargin-right: 5px;\npadding: 15px ;\n\n\n  border-width: 2px;\n  border-style: ridge;\n  border-color: -internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133));\n  border-image: -moz-linear-gradient(darkmagenta);\n\n\n`\n\nexport const ButtonForm=styled.button`\n  padding:  15px 15px 15px 3px;\n  width: fit-content;\n  border:none;\n\n`\n\n\n","import {useState} from \"react\";\nimport {ImSearch} from 'react-icons/im';\nimport { SearchForm,InputForm,ButtonForm } from './SearchBarStyle';\nimport PropTypes from 'prop-types';\n\n\nexport const SearchBar = ({onSubmit}) => {\n  const [searchQuery, setSearchQuery] = useState('')\n\n  const handleQueryChange = (e) => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(searchQuery.trim() === '') {\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('')\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <InputForm\n          name='query'\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleQueryChange}\n        />\n        <ButtonForm type=\"submit\">Search<ImSearch/></ButtonForm>\n      </SearchForm>\n    </>\n  );\n}\n\n\nSearchBar.propTypes={\n  onSubmit:PropTypes.func.isRequired\n}\n","import styled from \"styled-components\";\nimport {Link} from 'react-router-dom'\n\nexport const Container=styled.div`\n  width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n\n`\n\n\nexport const ListFoundStyle=styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin:0  auto 0 auto;\n  padding: 0;\n  list-style: none;\n`\n\n\nexport const ImageFoundItem=styled.li`\n  border-radius: 2px;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2),\n  0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover{\n    Transform: scale(1.03);\n    cursor: zoom-in;\n  }\n\n\n`\nexport const ImageFound=styled.img`\n  width: 100%;\n  object-fit: cover;\n\n`\n\nexport const StyledLink=styled(Link)`\n\ntext-decoration: none;\n\n`\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ListFoundStyle, ImageFoundItem, Container, ImageFound, StyledLink } from './FoundMoviesStyle';\nimport PropTypes from 'prop-types';\n\n\nexport const FoundMovies = ({ founds }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      <ListFoundStyle>\n        {founds.map(({ id, title, poster_path }) => {\n          return (\n            <ImageFoundItem key={id}>\n              <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                <ImageFound src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt={title} />\n                {title}</StyledLink>\n            </ImageFoundItem>\n          );\n        })}\n      </ListFoundStyle>\n    </Container>\n  );\n};\n\nFoundMovies.propTypes={\n  founds: PropTypes.array.isRequired\n}\n","import {useEffect, useState} from \"react\";\nimport {useLocation, useNavigate, useSearchParams} from \"react-router-dom\";\nimport {getFoundMovie} from \"../services/moviesApi\";\nimport {SearchBar} from \"../components/SearchBar/SearchBar\";\nimport {FoundMovies} from \"../components/MoviesPage/FoundMovies\";\n\n\nexport const MoviesPage = () => {\n\n  const [query, setQuery] = useState('');\n  const [found, setFound] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('query')\n\n  useEffect(() => {\n    if(query === '') {\n      return\n    }\n\n    async function fetchItem(){\n      try{\n        const item = await getFoundMovie(query);\n        const movieItem = item.map(({id, overview, poster_path, title}) => ({id, overview, poster_path, title}))\n        setFound(movieItem)\n\n      } catch (error){\n      }\n    }\n\n    fetchItem()\n  }, [query])\n\n  useEffect(() => {\n    if(search === null) {\n      return\n    }\n\n    async function fetchItem(){\n      try{\n        const item = await getFoundMovie(search)\n        const searchMovie = item.map(({id, overview, poster_path, title}) => ({id, overview, poster_path, title}))\n        setFound(searchMovie)\n      } catch (error){\n      }\n    }\n\n    fetchItem()\n  }, [search])\n\n\n  const forForm = (searchQuery) => {\n    setQuery(searchQuery);\n    navigate({...location, search: `query=${searchQuery}`})\n  }\n\n  return (\n    <>\n      <SearchBar onSubmit={forForm}/>\n      <FoundMovies founds={found}/>\n    </>\n\n  );\n};\n\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = '6db178e9ee32ba259e031d27905cafe1'\n\naxios.defaults.baseURL = `${BASE_URL}`;\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results\n}\n\nexport const getMovieById = async (id) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n  return response.data\n}\n\nexport const getMovieCast = async (id) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n  return response.data.cast\n}\n\nexport const getReviews = async (id) => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n  return response.data.results\n}\n\n\nexport const getFoundMovie = async (query) => {\n\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`)\n  return response.data.results\n}\n\n\n\n"],"names":["SearchForm","styled","InputForm","ButtonForm","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","name","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","Container","ListFoundStyle","ImageFoundItem","ImageFound","StyledLink","Link","FoundMovies","founds","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","MoviesPage","query","setQuery","found","setFound","navigate","useNavigate","useSearchParams","search","get","useEffect","getFoundMovie","item","movieItem","overview","fetchItem","searchMovie","API_KEY","axios","getMovies","response","data","results","getMovieById","getMovieCast","cast","getReviews"],"sourceRoot":""}
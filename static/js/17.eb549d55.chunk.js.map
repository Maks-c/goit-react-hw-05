{"version":3,"file":"static/js/17.eb549d55.chunk.js","mappings":"iRAEaA,E,QAAWC,GAAAA,GAAH,kO,SCCRC,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACE,8BACGA,IACC,yBACGA,EAAMC,OAAS,IACd,SAACJ,EAAD,UACGG,EAAME,KAAI,SAAAC,GACT,OAAO,yBACL,2BACGA,EAAKC,eACJ,gBAAKC,IAAG,yCAAoCF,EAAKC,cAAgBE,IAAKH,EAAKI,QAE7E,4BACE,kCAAUJ,EAAKI,SACf,uCAAeJ,EAAKK,oBAPVL,EAAKM,cCJxBC,EAAa,WAExB,IAAOC,GAAUC,EAAAA,EAAAA,MAAVD,OAEP,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOV,EAAP,KAAaW,EAAb,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAaL,GAFpC,OAEUR,EAFV,OAGIW,EAAQX,GAHZ,gDAKIc,EAAAA,GAAAA,MAAY,yBALhB,0DADc,uBAAC,WAAD,wBASdC,KACA,CAACP,KAID,8BACGR,IAAQ,SAACJ,EAAD,CAAMC,MAAOG,Q,0MCxBtBgB,EAAU,mCAEhBC,IAAAA,SAAAA,QAAA,UAHiB,gCAKV,IAAMC,EAAS,mCAAG,oGACAD,IAAAA,IAAA,uCAA0CD,IAD1C,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKTC,EAAY,mCAAG,WAAOhB,GAAP,uFACHW,IAAAA,IAAA,iBAAoBX,EAApB,oBAAkCU,EAAlC,oBADG,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZP,EAAY,mCAAG,WAAOP,GAAP,uFACHW,IAAAA,IAAA,iBAAoBX,EAApB,4BAA0CU,EAA1C,oBADG,cACpBG,EADoB,yBAEnBA,EAASC,KAAKG,MAFK,2CAAH,sDAKZC,EAAU,mCAAG,WAAOlB,GAAP,uFACDW,IAAAA,IAAA,iBAAoBX,EAApB,4BAA0CU,EAA1C,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAMVI,EAAa,mCAAG,WAAOC,GAAP,uFAEJT,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDU,EAApD,yBAFI,cAErBP,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,2CAAH","sources":["components/Cast/CastStyle.jsx","components/Cast/Cast.jsx","pages/ActorsPage.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin: 0 auto 0 auto;\n  padding: 0;\n  list-style: none;\n\n\n`;\n","import { CastList } from './CastStyle';\nimport PropTypes from 'prop-types'\n\nexport const Cast = ({ items }) => {\n  return (\n    <>\n      {items && (\n        <div>\n          {items.length > 0 && (\n            <CastList>\n              {items.map(item => {\n                return <li key={item.id}>\n                  <div>\n                    {item.profile_path && (\n                      <img src={`https://image.tmdb.org/t/p/w300${item.profile_path}`} alt={item.name} />)\n                    }\n                    <div>\n                      <p>Name: {item.name}</p>\n                      <p>Character: {item.character}</p>\n                    </div>\n                  </div>\n                </li>;\n                },\n              )}\n            </CastList>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\n\nCast.propTypes={\n  items:PropTypes.array.isRequired\n}\n\n","import {getMovieCast} from \"../services/moviesApi\";\nimport {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {toast} from \"react-hot-toast\";\nimport {Cast} from \"../components/Cast/Cast\";\n\n\nexport const ActorsPage = () => {\n\n  const {itemId} = useParams()\n\n  const [item, setItem] = useState(null)\n  useEffect(() => {\n    async function fetchItem(){\n      try{\n        const item = await getMovieCast(itemId);\n        setItem(item)\n      } catch (error){\n        toast.error('information not found')\n      }\n    }\n    fetchItem()\n  },[itemId])\n\n\n  return (\n    <>\n      {item && <Cast items={item}/>}\n    </>\n\n  );\n};\n\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = '6db178e9ee32ba259e031d27905cafe1'\n\naxios.defaults.baseURL = `${BASE_URL}`;\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results\n}\n\nexport const getMovieById = async (id) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n  return response.data\n}\n\nexport const getMovieCast = async (id) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n  return response.data.cast\n}\n\nexport const getReviews = async (id) => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n  return response.data.results\n}\n\n\nexport const getFoundMovie = async (query) => {\n\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`)\n  return response.data.results\n}\n\n\n\n"],"names":["CastList","styled","Cast","items","length","map","item","profile_path","src","alt","name","character","id","ActorsPage","itemId","useParams","useState","setItem","useEffect","getMovieCast","toast","fetchItem","API_KEY","axios","getMovies","response","data","results","getMovieById","cast","getReviews","getFoundMovie","query"],"sourceRoot":""}
{"version":3,"file":"static/js/322.6feaee36.chunk.js","mappings":"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","sources":["components/Cast/CastStyle.jsx","components/Cast/Cast.jsx","pages/ActorsPage.jsx","components/Reviews/ReviewsStyle.jsx","components/Reviews/Reviews.jsx","pages/DescriptionPage.jsx","components/MovieCard/MovieCardStyle.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage.jsx","components/SearchBar/SearchBarStyle.jsx","components/SearchBar/SearchBar.jsx","components/MoviesPage/FoundMoviesStyle.jsx","components/MoviesPage/FoundMovies.jsx","pages/MoviesPage.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin: 0 auto 0 auto;\n  padding: 0;\n  list-style: none;\n\n\n`;\n","import { CastList } from './CastStyle';\nimport PropTypes from 'prop-types'\n\nexport const Cast = ({ items }) => {\n  return (\n    <>\n      {items && (\n        <div>\n          {items.length > 0 && (\n            <CastList>\n              {items.map(item => {\n                return <li key={item.id}>\n                  <div>\n                    {item.profile_path && (\n                      <img src={`https://image.tmdb.org/t/p/w300${item.profile_path}`} alt={item.name} />)\n                    }\n                    <div>\n                      <p>Name: {item.name}</p>\n                      <p>Character: {item.character}</p>\n                    </div>\n                  </div>\n                </li>;\n                },\n              )}\n            </CastList>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\n\nCast.propTypes={\n  items:PropTypes.array.isRequired\n}\n\n","import {getMovieCast} from \"../services/moviesApi\";\nimport {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {toast} from \"react-hot-toast\";\nimport {Cast} from \"../components/Cast/Cast\";\n\n\nexport const ActorsPage = () => {\n\n  const {itemId} = useParams()\n\n  const [item, setItem] = useState(null)\n  useEffect(() => {\n    async function fetchItem(){\n      try{\n        const item = await getMovieCast(itemId);\n        setItem(item)\n      } catch (error){\n        toast.error('information not found')\n      }\n    }\n    fetchItem()\n  },[itemId])\n\n\n  return (\n    <>\n      {item && <Cast items={item}/>}\n    </>\n\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  margin: 0 auto 0 auto;\n  padding: 0;\n  list-style: none;\n\n`;\n","import { ReviewsList } from './ReviewsStyle';\nimport PropTypes from 'prop-types';\n\n\nexport const Reviews = ({ items }) => {\n\n\n  return (\n    <ReviewsList>\n      {items.map(review => (\n        <li key={review.id}>\n          <p>Author: {review.author}</p>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ReviewsList>\n\n\n  );\n};\n\nReviews.propTypes={\n  items:PropTypes.array.isRequired\n}\n","import {getReviews} from \"../services/moviesApi\";\nimport {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {Reviews} from \"../components/Reviews/Reviews\";\nimport {toast} from \"react-hot-toast\";\n\nexport const DescriptionPage = () => {\n\n  const {itemId} = useParams()\n  const [item, setItem] = useState(null)\n  useEffect(() => {\n\n    async function fetchItem(){\n      try{\n        const item = await getReviews(itemId);\n        setItem(item)\n      } catch (error){\n        toast.error('no description')\n      }\n    }\n    fetchItem()\n  },[itemId])\n\n  return (\n\n    <>\n      {item && <Reviews items={item}/>}\n    </>\n  )\n\n\n}\n","import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\n\nexport const LinkCast=styled(Link)`\n\nmargin-right: 10px;\n\n\n`\n\n\n\nexport const LinkBtn=styled(Link)`\n\n    display: inline-block; /* Строчно-блочный элемент */\n    background: #B0C4DE; /* Серый цвет фона */\n    color: #fff; /* Белый цвет текста */\n    padding: 1rem 1.5rem; /* Поля вокруг текста */\n    text-decoration: none; /* Убираем подчёркивание */\n    border-radius: 3px;\n`\n\nexport const Container=styled.article`\n\n  width: 1200px;\n  margin-right: auto;\n  margin-left: auto;\n`\nexport const Feature=styled.div`\n  margin-left: 15px;\n  margin-right: 15px;\n`\n\n\nexport const CardBlock=styled.div`\n  display: flex;\n`\n\nexport const H2=styled.h2`\n\n\n    display: table;\n    width: auto;\n    margin: 15px auto;\n    letter-spacing: 1px;\n    color: #808080;\n\n\n\n\n\n`\n\n","import {Link,useLocation} from \"react-router-dom\";\nimport {LinkBtn,Container,Feature,CardBlock,H2,LinkCast} from \"./MovieCardStyle\";\nimport PropTypes from 'prop-types';\n\n\n\n\nexport const MovieCard = ({item}) => {\n\n  const location=useLocation()\n  const releaseYear = new Date(item.release_date).getFullYear()\n  return (\n    <Container>\n      <LinkBtn to={ location?.state?.from ?? '/' }>Go Back</LinkBtn>\n      <H2>{item.title} <span>{releaseYear}</span></H2>\n      <CardBlock>\n        <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.title}/>\n        <Feature>\n          <p>User score: {item.vote_average*10}%</p>\n          <p>Overview: {item.overview}</p>\n          <p>Genres: </p>\n          <p>{item.genres.map(({id,name})=>{return <span key={id}>{name} </span>}) }</p>\n        </Feature>\n      </CardBlock>\n      <h2>Additional information</h2>\n      <hr/>\n      <LinkCast to='cast' state={{from:location}}>Cast</LinkCast>\n      <Link to='reviews' state={{from:location}}>Reviews</Link>\n\n    </Container>\n\n  )\n};\n\nMovieCard.propTypes={\n  item:PropTypes.array.isRequired\n}\n","import {useParams, Outlet} from \"react-router-dom\";\nimport {getMovieById} from \"../services/moviesApi\";\nimport {useEffect, useState} from \"react\";\nimport {MovieCard} from \"../components/MovieCard/MovieCard\";\nimport {toast} from \"react-hot-toast\";\n\n\n\n\nexport const MovieDetailsPage = () => {\n\n\n  const {itemId} = useParams()\n  const [item, setItem] = useState(null)\n\n  useEffect(() => {\n    async function fetchItem(){\n      try{\n        const item = await getMovieById(itemId);\n        setItem(item)\n      } catch (error){\n        toast.error('NOT FOUND, PLEASE ENTRY')\n      }\n    }\n\n    fetchItem()\n  }, [itemId])\n\n\n  return (\n    <main>\n      {item && <MovieCard to='movies/:itemId' item={item}/> }\n      <Outlet/>\n\n    </main>)\n};\n\n","import styled from 'styled-components';\n\n\nexport const SearchForm=styled.form`\n  //margin-top: 25px;\n  //margin-bottom: 25px;\n\n  margin: 25px auto 25px auto;\n  width: fit-content;\n`\n\n\nexport const InputForm=styled.input`\nmargin-right: 5px;\npadding: 15px ;\n\n\n  border-width: 2px;\n  border-style: ridge;\n  border-color: -internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133));\n  border-image: -moz-linear-gradient(darkmagenta);\n\n\n`\n\nexport const ButtonForm=styled.button`\n  padding:  15px 15px 15px 3px;\n  width: fit-content;\n  border:none;\n\n`\n\n\n","import {useState} from \"react\";\nimport {ImSearch} from 'react-icons/im';\nimport { SearchForm,InputForm,ButtonForm } from './SearchBarStyle';\nimport PropTypes from 'prop-types';\n\n\nexport const SearchBar = ({onSubmit}) => {\n  const [searchQuery, setSearchQuery] = useState('')\n\n  const handleQueryChange = (e) => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(searchQuery.trim() === '') {\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('')\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <InputForm\n          name='query'\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleQueryChange}\n        />\n        <ButtonForm type=\"submit\">Search<ImSearch/></ButtonForm>\n      </SearchForm>\n    </>\n  );\n}\n\n\nSearchBar.propTypes={\n  onSubmit:PropTypes.func.isRequired\n}\n","import styled from \"styled-components\";\nimport {Link} from 'react-router-dom'\n\nexport const Container=styled.div`\n  width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n\n`\n\n\nexport const ListFoundStyle=styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin:0  auto 0 auto;\n  padding: 0;\n  list-style: none;\n`\n\n\nexport const ImageFoundItem=styled.li`\n  border-radius: 2px;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2),\n  0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover{\n    Transform: scale(1.03);\n    cursor: zoom-in;\n  }\n\n\n`\nexport const ImageFound=styled.img`\n  width: 100%;\n  object-fit: cover;\n\n`\n\nexport const StyledLink=styled(Link)`\n\ntext-decoration: none;\n\n`\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ListFoundStyle, ImageFoundItem, Container, ImageFound, StyledLink } from './FoundMoviesStyle';\nimport PropTypes from 'prop-types';\n\n\nexport const FoundMovies = ({ founds }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      <ListFoundStyle>\n        {founds.map(({ id, title, poster_path }) => {\n          return (\n            <ImageFoundItem key={id}>\n              <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                <ImageFound src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt={title} />\n                {title}</StyledLink>\n            </ImageFoundItem>\n          );\n        })}\n      </ListFoundStyle>\n    </Container>\n  );\n};\n\nFoundMovies.propTypes={\n  founds: PropTypes.array.isRequired\n}\n","import {useEffect, useState} from \"react\";\nimport {useLocation, useNavigate, useSearchParams} from \"react-router-dom\";\nimport {getFoundMovie} from \"../services/moviesApi\";\nimport {SearchBar} from \"../components/SearchBar/SearchBar\";\nimport {FoundMovies} from \"../components/MoviesPage/FoundMovies\";\n\n\nexport const MoviesPage = () => {\n\n  const [query, setQuery] = useState('');\n  const [found, setFound] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('query')\n\n  useEffect(() => {\n    if(query === '') {\n      return\n    }\n\n    async function fetchItem(){\n      try{\n        const item = await getFoundMovie(query);\n        const movieItem = item.map(({id, overview, poster_path, title}) => ({id, overview, poster_path, title}))\n        setFound(movieItem)\n\n      } catch (error){\n      }\n    }\n\n    fetchItem()\n  }, [query])\n\n  useEffect(() => {\n    if(search === null) {\n      return\n    }\n\n    async function fetchItem(){\n      try{\n        const item = await getFoundMovie(search)\n        const searchMovie = item.map(({id, overview, poster_path, title}) => ({id, overview, poster_path, title}))\n        setFound(searchMovie)\n      } catch (error){\n      }\n    }\n\n    fetchItem()\n  }, [search])\n\n\n  const forForm = (searchQuery) => {\n    setQuery(searchQuery);\n    navigate({...location, search: `query=${searchQuery}`})\n  }\n\n  return (\n    <>\n      <SearchBar onSubmit={forForm}/>\n      <FoundMovies founds={found}/>\n    </>\n\n  );\n};\n\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = '6db178e9ee32ba259e031d27905cafe1'\n\naxios.defaults.baseURL = `${BASE_URL}`;\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results\n}\n\nexport const getMovieById = async (id) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n  return response.data\n}\n\nexport const getMovieCast = async (id) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n  return response.data.cast\n}\n\nexport const getReviews = async (id) => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n  return response.data.results\n}\n\n\nexport const getFoundMovie = async (query) => {\n\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`)\n  return response.data.results\n}\n\n\n\n"],"names":["CastList","styled","Cast","items","length","map","item","profile_path","src","alt","name","character","id","ActorsPage","itemId","useParams","useState","setItem","useEffect","getMovieCast","toast","fetchItem","ReviewsList","Reviews","review","author","content","DescriptionPage","getReviews","LinkCast","Link","LinkBtn","Container","Feature","CardBlock","H2","MovieCard","location","useLocation","releaseYear","Date","release_date","getFullYear","to","state","from","title","poster_path","vote_average","overview","genres","MovieDetailsPage","getMovieById","SearchForm","InputForm","ButtonForm","SearchBar","onSubmit","searchQuery","setSearchQuery","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","ListFoundStyle","ImageFoundItem","ImageFound","StyledLink","FoundMovies","founds","MoviesPage","query","setQuery","found","setFound","navigate","useNavigate","useSearchParams","search","get","getFoundMovie","movieItem","searchMovie","API_KEY","axios","getMovies","response","data","results","cast"],"sourceRoot":""}
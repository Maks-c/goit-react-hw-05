{"version":3,"file":"static/js/979.f1541639.chunk.js","mappings":"6SAIaA,GAASC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAD,mDASRE,GAAQF,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAD,4tBAUPG,EAAUH,EAAAA,GAAAA,QAAD,yFAMTI,EAAQJ,EAAAA,GAAAA,IAAD,qEAMPK,EAAUL,EAAAA,GAAAA,IAAD,0CAITM,EAAGN,EAAAA,GAAAA,GAAD,oJ,SChCFO,EAAY,SAAC,GAAY,IAAD,IAAVC,EAAU,EAAVA,KAEnBC,GAASC,EAAAA,EAAAA,MACTC,EAAc,IAAIC,KAAKJ,EAAKK,cAAcC,cAChD,OACE,UAACX,EAAD,YACE,SAACD,EAAD,CAASa,GAAE,iBAAGN,QAAH,IAAGA,GAAH,UAAGA,EAAUO,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAAvC,sBACA,UAACX,EAAD,WAAKE,EAAKU,MAAV,KAAiB,0BAAOP,QACxB,UAACN,EAAD,YACE,gBAAKc,IAAG,yCAAoCX,EAAKY,aAAeC,IAAKb,EAAKU,SAC1E,UAACd,EAAD,YACE,wCAAkC,GAAlBI,EAAKc,aAArB,QACA,sCAAcd,EAAKe,aACnB,qCACA,uBAAIf,EAAKgB,OAAOC,KAAI,YAAc,IAAZC,EAAW,EAAXA,GAAGC,EAAQ,EAARA,KAAS,OAAO,4BAAgBA,EAAhB,MAAWD,eAGxD,oDACA,mBACA,SAAC3B,EAAD,CAAUgB,GAAG,OAAOC,MAAO,CAACC,KAAKR,GAAjC,mBACA,SAAC,KAAD,CAAMM,GAAG,UAAUC,MAAO,CAACC,KAAKR,GAAhC,yB,UClBOmB,EAAmB,WAG9B,IAAOC,GAAUC,EAAAA,EAAAA,MAAVD,OACP,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOvB,EAAP,KAAawB,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAaL,GAFpC,OAEUrB,EAFV,OAGIwB,EAAQxB,GAHZ,gDAKI2B,EAAAA,GAAAA,MAAY,2BALhB,0DADc,uBAAC,WAAD,wBAUdC,KACC,CAACP,KAIF,4BACGrB,IAAQ,SAACD,EAAD,CAAWQ,GAAG,iBAAiBP,KAAMA,KAC9C,SAAC,KAAD,S,0MC7BA6B,EAAU,mCAEhBC,IAAAA,SAAAA,QAAA,UAHiB,gCAKV,IAAMC,EAAS,mCAAG,oGACAD,IAAAA,IAAA,uCAA0CD,IAD1C,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKTR,EAAY,mCAAG,WAAOR,GAAP,uFACHY,IAAAA,IAAA,iBAAoBZ,EAApB,oBAAkCW,EAAlC,oBADG,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZE,EAAY,mCAAG,WAAOjB,GAAP,uFACHY,IAAAA,IAAA,iBAAoBZ,EAApB,4BAA0CW,EAA1C,oBADG,cACpBG,EADoB,yBAEnBA,EAASC,KAAKG,MAFK,2CAAH,sDAKZC,EAAU,mCAAG,WAAOnB,GAAP,uFACDY,IAAAA,IAAA,iBAAoBZ,EAApB,4BAA0CW,EAA1C,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAMVI,EAAa,mCAAG,WAAOC,GAAP,uFAEJT,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDU,EAApD,yBAFI,cAErBP,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,2CAAH","sources":["components/MovieCard/MovieCardStyle.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\n\nexport const LinkCast=styled(Link)`\n\nmargin-right: 10px;\n\n\n`\n\n\n\nexport const LinkBtn=styled(Link)`\n\n    display: inline-block; /* Строчно-блочный элемент */\n    background: #B0C4DE; /* Серый цвет фона */\n    color: #fff; /* Белый цвет текста */\n    padding: 1rem 1.5rem; /* Поля вокруг текста */\n    text-decoration: none; /* Убираем подчёркивание */\n    border-radius: 3px;\n`\n\nexport const Container=styled.article`\n\n  width: 1200px;\n  margin-right: auto;\n  margin-left: auto;\n`\nexport const Feature=styled.div`\n  margin-left: 15px;\n  margin-right: 15px;\n`\n\n\nexport const CardBlock=styled.div`\n  display: flex;\n`\n\nexport const H2=styled.h2`\n\n\n    display: table;\n    width: auto;\n    margin: 15px auto;\n    letter-spacing: 1px;\n    color: #808080;\n\n\n\n\n\n`\n\n","import {Link,useLocation} from \"react-router-dom\";\nimport {LinkBtn,Container,Feature,CardBlock,H2,LinkCast} from \"./MovieCardStyle\";\nimport PropTypes from 'prop-types';\n\n\n\n\nexport const MovieCard = ({item}) => {\n\n  const location=useLocation()\n  const releaseYear = new Date(item.release_date).getFullYear()\n  return (\n    <Container>\n      <LinkBtn to={ location?.state?.from ?? '/' }>Go Back</LinkBtn>\n      <H2>{item.title} <span>{releaseYear}</span></H2>\n      <CardBlock>\n        <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.title}/>\n        <Feature>\n          <p>User score: {item.vote_average*10}%</p>\n          <p>Overview: {item.overview}</p>\n          <p>Genres: </p>\n          <p>{item.genres.map(({id,name})=>{return <span key={id}>{name} </span>}) }</p>\n        </Feature>\n      </CardBlock>\n      <h2>Additional information</h2>\n      <hr/>\n      <LinkCast to='cast' state={{from:location}}>Cast</LinkCast>\n      <Link to='reviews' state={{from:location}}>Reviews</Link>\n\n    </Container>\n\n  )\n};\n\nMovieCard.propTypes={\n  item:PropTypes.array.isRequired\n}\n","import {useParams, Outlet} from \"react-router-dom\";\nimport {getMovieById} from \"../services/moviesApi\";\nimport {useEffect, useState} from \"react\";\nimport {MovieCard} from \"../components/MovieCard/MovieCard\";\nimport {toast} from \"react-hot-toast\";\n\n\n\n\nexport const MovieDetailsPage = () => {\n\n\n  const {itemId} = useParams()\n  const [item, setItem] = useState(null)\n\n  useEffect(() => {\n    async function fetchItem(){\n      try{\n        const item = await getMovieById(itemId);\n        setItem(item)\n      } catch (error){\n        toast.error('NOT FOUND, PLEASE ENTRY')\n      }\n    }\n\n    fetchItem()\n  }, [itemId])\n\n\n  return (\n    <main>\n      {item && <MovieCard to='movies/:itemId' item={item}/> }\n      <Outlet/>\n\n    </main>)\n};\n\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = '6db178e9ee32ba259e031d27905cafe1'\n\naxios.defaults.baseURL = `${BASE_URL}`;\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results\n}\n\nexport const getMovieById = async (id) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n  return response.data\n}\n\nexport const getMovieCast = async (id) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n  return response.data.cast\n}\n\nexport const getReviews = async (id) => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n  return response.data.results\n}\n\n\nexport const getFoundMovie = async (query) => {\n\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`)\n  return response.data.results\n}\n\n\n\n"],"names":["LinkCast","styled","Link","LinkBtn","Container","Feature","CardBlock","H2","MovieCard","item","location","useLocation","releaseYear","Date","release_date","getFullYear","to","state","from","title","src","poster_path","alt","vote_average","overview","genres","map","id","name","MovieDetailsPage","itemId","useParams","useState","setItem","useEffect","getMovieById","toast","fetchItem","API_KEY","axios","getMovies","response","data","results","getMovieCast","cast","getReviews","getFoundMovie","query"],"sourceRoot":""}